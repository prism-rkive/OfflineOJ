Monocarp is playing a computer game. In order to level up his character, he can complete quests. There are n quests in the game, numbered from 1 to n.

Monocarp can complete quests according to the following rules: the 1-st quest is always available for completion; the i-th quest is available for completion if all quests j<i have been completed at least once.
Note that Monocarp can complete the same quest multiple times.

For each completion, the character gets some amount of experience points: for the first completion of the i-th quest, he gets ai experience points; for each subsequent completion of the i-th quest, he gets bi experience points.
Monocarp is a very busy person, so he has free time to complete no more than k quests. Your task is to calculate the maximum possible total experience Monocarp can get if he can complete no more than k quests.

Input:
The first line contains a single integer t (1 ≤ t ≤ 10^4) — the number of test cases.

The first line of each test case contains two integers n and k (1 ≤ n ≤ 2x10^5; 1 ≤ k ≤ 2x10^5) — the number of quests and the maximum number of quests Monocarp can complete, respectively.

The second line contains n integers a1,a2,…,an (1 ≤ ai ≤ 10^3).

The third line contains n integers b1,b2,…,bn (1 ≤ bi ≤ 10^3).

Additional constraint on the input: the sum of n over all test cases does not exceed 2x10^5.

Output:
For each test case, print a single integer — the maximum possible total experience Monocarp can get if he can complete no more than k quests.
