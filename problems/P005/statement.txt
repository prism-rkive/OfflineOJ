You are given an array a of distinct integers.

In one operation, you may either:

choose a nonempty prefix∗of a and replace it with its minimum value, or
choose a nonempty suffix† of a and replace it with its maximum value.
Note that you may choose the entire array a.

For each element ai, determine if there exists some sequence of operations to transform a into [ai]; that is, make the array a consist of only one element, which is ai. Output your answer as a binary string of length n, where the i-th character is 1 if there exists a sequence to transform a into [ai], and 0 otherwise.

∗
A prefix of an array is a subarray consisting of the first k elements of the array, for some integer k.

†
A suffix of an array is a subarray consisting of the last k elements of the array, for some integer k.

Input
The first line contains an integer t (1 ≤ t ≤ 10^4)  — the number of test cases.

The first line of each test case contains one integer n (2 ≤ n ≤ 2*10^5) — the size of the array a.

The second line of each test case contains n integers, a1,a2,…,an (1 ≤ ai ≤ 10^6). It is guaranteed that all ai are distinct.

It is guaranteed that the sum of n over all test cases does not exceed 2*10^5.

Output
For each test case, output a binary string of length n— the i-th character should be 1 if there exists a sequence of operations as described above, and 0 otherwise.
